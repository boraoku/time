<!DOCTYPE html>
<html>
<head>
  <title>Let's sync our times!</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap');
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Orbitron', monospace;
      background: #0a0a0a;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      position: relative;
      overflow-x: hidden;
    }

    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: 
        linear-gradient(180deg, transparent 0%, rgba(0, 255, 100, 0.1) 100%),
        linear-gradient(90deg, transparent 0%, rgba(0, 255, 100, 0.05) 100%);
      pointer-events: none;
      z-index: 1;
    }

    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: 
        repeating-linear-gradient(
          0deg,
          transparent,
          transparent 2px,
          rgba(0, 255, 100, 0.03) 2px,
          rgba(0, 255, 100, 0.03) 4px
        ),
        repeating-linear-gradient(
          90deg,
          transparent,
          transparent 2px,
          rgba(0, 255, 100, 0.03) 2px,
          rgba(0, 255, 100, 0.03) 4px
        );
      pointer-events: none;
      z-index: 1;
    }

    .grid-floor {
      position: fixed;
      bottom: 0;
      left: -50%;
      right: -50%;
      height: 40%;
      background-image: 
        linear-gradient(rgba(0, 255, 100, 0.5) 2px, transparent 2px),
        linear-gradient(90deg, rgba(0, 255, 100, 0.5) 2px, transparent 2px);
      background-size: 50px 50px;
      background-position: center center;
      transform: perspective(200px) rotateX(60deg);
      pointer-events: none;
      z-index: 0;
    }

    .container {
      background: linear-gradient(135deg, #001a00 0%, #003300 50%, #001a00 100%);
      border: 3px solid #00ff66;
      border-radius: 0;
      box-shadow: 
        0 0 40px rgba(0, 255, 100, 0.5),
        0 0 80px rgba(0, 255, 100, 0.3),
        inset 0 0 40px rgba(0, 255, 100, 0.1);
      padding: 40px;
      width: 100%;
      max-width: 1200px;
      position: relative;
      z-index: 2;
    }

    .container::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg, #00ff66, #00ff66, #00ff66, #00ff66);
      z-index: -1;
      animation: neonBorder 3s linear infinite;
    }

    @keyframes neonBorder {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }

    h1 {
      background: linear-gradient(90deg, #00ff66 0%, #00ff66 25%, #88ff00 50%, #00ff66 75%, #00ff66 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-align: center;
      margin-bottom: 30px;
      font-size: 3em;
      font-weight: 900;
      text-transform: uppercase;
      letter-spacing: 5px;
      text-shadow: 
        0 0 10px rgba(0, 255, 100, 0.8),
        0 0 20px rgba(0, 255, 100, 0.8),
        0 0 30px rgba(0, 255, 100, 0.8);
      animation: glowPulse 2s ease-in-out infinite;
    }

    @keyframes glowPulse {
      0%, 100% { filter: brightness(1); }
      50% { filter: brightness(1.2); }
    }

    .subtitle {
      text-align: center;
      color: #00ff66;
      font-size: 0.9em;
      margin-top: -20px;
      margin-bottom: 30px;
      letter-spacing: 10px;
      text-transform: uppercase;
      opacity: 0.8;
    }

    .input-section {
      margin-bottom: 25px;
    }

    .input-wrapper {
      position: relative;
      margin-bottom: 20px;
    }

    input[type="text"] {
      width: 100%;
      padding: 15px 20px;
      font-size: 16px;
      font-family: 'Orbitron', monospace;
      background: rgba(0, 0, 0, 0.8);
      border: 2px solid #00ff66;
      color: #00ff66;
      text-transform: uppercase;
      letter-spacing: 2px;
      transition: all 0.3s ease;
      outline: none;
      box-shadow: 
        inset 0 0 20px rgba(0, 255, 100, 0.1),
        0 0 20px rgba(0, 255, 100, 0.3);
    }

    input[type="text"]:focus {
      border-color: #00ff66;
      box-shadow: 
        inset 0 0 20px rgba(0, 255, 100, 0.2),
        0 0 30px rgba(0, 255, 100, 0.5);
      background: rgba(0, 0, 0, 0.9);
    }

    input[type="text"]::placeholder {
      color: rgba(0, 255, 100, 0.5);
      text-transform: none;
      letter-spacing: 1px;
    }

    .submit-btn {
      background: linear-gradient(45deg, #00ff66 0%, #00ff66 100%);
      color: #000;
      border: none;
      padding: 15px 40px;
      font-size: 18px;
      font-family: 'Orbitron', monospace;
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 3px;
      cursor: pointer;
      transition: all 0.3s ease;
      display: block;
      margin: 0 auto;
      position: relative;
      overflow: hidden;
      box-shadow: 
        0 0 20px rgba(0, 255, 100, 0.5),
        0 0 40px rgba(0, 255, 100, 0.3);
    }

    .submit-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
      transition: left 0.5s ease;
    }

    .submit-btn:hover::before {
      left: 100%;
    }

    .submit-btn:hover {
      transform: translateY(-2px) scale(1.05);
      box-shadow: 
        0 5px 30px rgba(0, 255, 100, 0.7),
        0 5px 50px rgba(0, 255, 100, 0.5);
    }

    .submit-btn:active {
      transform: translateY(0) scale(1);
    }

    .error-message {
      background: rgba(255, 0, 0, 0.2);
      border: 2px solid #ff0066;
      color: #ff66aa;
      padding: 15px;
      text-align: center;
      margin-bottom: 20px;
      text-transform: uppercase;
      letter-spacing: 2px;
      box-shadow: 
        0 0 20px rgba(255, 0, 102, 0.5),
        inset 0 0 20px rgba(255, 0, 102, 0.1);
    }

    .clocks-container {
      display: flex;
      flex-wrap: wrap;
      gap: 30px;
      justify-content: center;
      margin-top: 40px;
    }

    .clock-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      transition: transform 0.3s ease;
      animation: float 3s ease-in-out infinite;
    }

    .clock-wrapper:nth-child(2n) {
      animation-delay: 0.5s;
    }

    .clock-wrapper:nth-child(3n) {
      animation-delay: 1s;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }

    .clock-wrapper:hover {
      transform: scale(1.1) translateY(-5px);
    }

    .analog-clock {
      width: 200px;
      height: 200px;
      position: relative;
      margin-bottom: 15px;
    }

    .clock-face {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      position: relative;
      transition: all 0.3s ease;
    }

    .clock-face.am {
      background: radial-gradient(circle at center, #00ff66 0%, #006633 50%, #001100 100%);
      border: 3px solid #00ff66;
      box-shadow: 
        0 0 40px rgba(0, 255, 100, 0.8),
        inset 0 0 30px rgba(0, 255, 100, 0.3),
        0 0 80px rgba(0, 255, 100, 0.4);
    }

    .clock-face.pm {
      background: radial-gradient(circle at center, #00ff66 0%, #336600 50%, #0a1a00 100%);
      border: 3px solid #00ff66;
      box-shadow: 
        0 0 40px rgba(0, 255, 100, 0.8),
        inset 0 0 30px rgba(0, 255, 100, 0.3),
        0 0 80px rgba(0, 255, 100, 0.4);
    }

    .clock-center {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 12px;
      height: 12px;
      background: #88ff00;
      border-radius: 50%;
      transform: translate(-50%, -50%);
      z-index: 10;
      box-shadow: 
        0 0 20px rgba(136, 255, 0, 0.8),
        0 0 40px rgba(136, 255, 0, 0.5);
    }

    .hand {
      position: absolute;
      bottom: 50%;
      left: 50%;
      transform-origin: bottom center;
      border-radius: 3px;
      transition: transform 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
    }

    .hour-hand {
      width: 6px;
      height: 35px;
      margin-left: -3px;
    }

    .minute-hand {
      width: 4px;
      height: 45px;
      margin-left: -2px;
    }

    .am .hand {
      background: linear-gradient(to top, #00ff66, #ffffff);
      box-shadow: 0 0 10px rgba(0, 255, 100, 0.8);
    }

    .pm .hand {
      background: linear-gradient(to top, #00ff66, #ffffff);
      box-shadow: 0 0 10px rgba(0, 255, 100, 0.8);
    }

    .clock-number {
      position: absolute;
      font-size: 11px;
      font-weight: bold;
    }

    .am .clock-number {
      color: #00ff66;
      text-shadow: 0 0 5px rgba(0, 255, 100, 0.8);
    }

    .pm .clock-number {
      color: #00ff66;
      text-shadow: 0 0 5px rgba(0, 255, 100, 0.8);
    }

    .clock-number.twelve {
      top: 10px;
      left: 50%;
      transform: translateX(-50%);
    }

    .clock-number.three {
      top: 50%;
      right: 10px;
      transform: translateY(-50%);
    }

    .clock-number.six {
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
    }

    .clock-number.nine {
      top: 50%;
      left: 10px;
      transform: translateY(-50%);
    }

    .city-name {
      font-size: 16px;
      font-weight: 700;
      color: #88ff00;
      margin-bottom: 5px;
      text-transform: uppercase;
      letter-spacing: 3px;
      text-shadow: 
        0 0 10px rgba(136, 255, 0, 0.8),
        0 0 20px rgba(136, 255, 0, 0.5);
    }

    .time-digital {
      font-size: 14px;
      color: #00ff66;
      font-variant-numeric: tabular-nums;
      letter-spacing: 2px;
      text-shadow: 0 0 10px rgba(0, 255, 100, 0.8);
    }

    .timezone-info {
      font-size: 11px;
      color: rgba(0, 255, 100, 0.8);
      margin-top: 3px;
      letter-spacing: 1px;
    }

    .example-text {
      text-align: center;
      color: rgba(0, 255, 100, 0.7);
      font-size: 12px;
      margin-top: 15px;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    .scanlines {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      z-index: 9999;
      background: repeating-linear-gradient(
        0deg,
        rgba(0, 0, 0, 0.15),
        rgba(0, 0, 0, 0.15) 1px,
        transparent 1px,
        transparent 2px
      );
      animation: scanlines 8s linear infinite;
    }

    @keyframes scanlines {
      0% { transform: translateY(0); }
      100% { transform: translateY(10px); }
    }

    @media (max-width: 768px) {
      .container {
        padding: 30px 20px;
      }

      h1 {
        font-size: 2em;
        margin-bottom: 20px;
        letter-spacing: 3px;
      }

      .analog-clock {
        width: 140px;
        height: 140px;
      }

      .hour-hand {
        height: 25px;
      }

      .minute-hand {
        height: 35px;
      }

      .clock-number {
        font-size: 9px;
      }

      .city-name {
        font-size: 14px;
        letter-spacing: 2px;
      }

      .time-digital {
        font-size: 12px;
      }

      .clocks-container {
        gap: 20px;
      }

      input[type="text"] {
        font-size: 14px;
        padding: 12px 15px;
      }

      .submit-btn {
        font-size: 16px;
        padding: 12px 30px;
      }
    }

    @media (max-width: 480px) {
      .clocks-container {
        flex-direction: column;
        align-items: center;
      }

      .analog-clock {
        width: 160px;
        height: 160px;
      }

      h1 {
        font-size: 1.5em;
        letter-spacing: 2px;
      }

      .subtitle {
        letter-spacing: 5px;
        font-size: 0.7em;
      }
    }
  </style>
</head>
<body>
  <div class="grid-floor"></div>
  <div class="scanlines"></div>
  
  <div class="container">
    <h1>Let's sync our times!</h1>
    <div class="subtitle">What time is it there?</div>
    
    <div class="input-section">
      <%= form_with url: root_path, method: :get, local: true do |form| %>
        <div class="input-wrapper">
          <%= form.text_field :query, 
              value: @query, 
              placeholder: "Enter time query: 10pm sydney in london and dubai", 
              autocomplete: "off",
              autofocus: true %>
        </div>
      <% end %>
      
      <% unless @query.present? %>
        <p class="example-text">
          Examples: "3:30pm new york in tokyo, paris" | "noon pst in est and gmt"
        </p>
      <% end %>
    </div>

    <% if @error.present? %>
      <div class="error-message">
        ERROR: <%= @error %>
      </div>
    <% end %>

    <% if @results.present? %>
      <div class="clocks-container">
        <% @results.each do |result| %>
          <div class="clock-wrapper">
            <div class="analog-clock">
              <svg class="clock-face <%= result[:is_pm] ? 'pm' : 'am' %>" viewBox="0 0 150 150">
                <defs>
                  <filter id="glow">
                    <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
                    <feMerge>
                      <feMergeNode in="coloredBlur"/>
                      <feMergeNode in="SourceGraphic"/>
                    </feMerge>
                  </filter>
                </defs>
                
                <circle cx="75" cy="75" r="73" fill="none" />
                
                <% 12.times do |i| %>
                  <% angle = i * 30 %>
                  <% x1 = 75 + 60 * Math.sin(angle * Math::PI / 180) %>
                  <% y1 = 75 - 60 * Math.cos(angle * Math::PI / 180) %>
                  <% x2 = 75 + 65 * Math.sin(angle * Math::PI / 180) %>
                  <% y2 = 75 - 65 * Math.cos(angle * Math::PI / 180) %>
                  <line x1="<%= x1 %>" y1="<%= y1 %>" x2="<%= x2 %>" y2="<%= y2 %>" 
                        stroke="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                        stroke-width="<%= i % 3 == 0 ? '3' : '1' %>"
                        opacity="<%= i % 3 == 0 ? '1' : '0.5' %>"
                        filter="url(#glow)" />
                <% end %>
                
                <% hour_angle = ((result[:time].hour % 12) * 30 + result[:time].min * 0.5) - 90 %>
                <% minute_angle = result[:time].min * 6 - 90 %>
                
                <!-- Hour hand -->
                <line x1="75" y1="75" 
                      x2="<%= 75 + 35 * Math.cos(hour_angle * Math::PI / 180) %>" 
                      y2="<%= 75 + 35 * Math.sin(hour_angle * Math::PI / 180) %>"
                      stroke="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      stroke-width="8"
                      stroke-linecap="round" />
                <line x1="75" y1="75" 
                      x2="<%= 75 + 35 * Math.cos(hour_angle * Math::PI / 180) %>" 
                      y2="<%= 75 + 35 * Math.sin(hour_angle * Math::PI / 180) %>"
                      stroke="<%= result[:is_pm] ? '#004400' : '#003333' %>" 
                      stroke-width="5"
                      stroke-linecap="round" />
                
                <!-- Minute hand -->
                <line x1="75" y1="75" 
                      x2="<%= 75 + 50 * Math.cos(minute_angle * Math::PI / 180) %>" 
                      y2="<%= 75 + 50 * Math.sin(minute_angle * Math::PI / 180) %>"
                      stroke="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      stroke-width="8"
                      stroke-linecap="round" />
                <line x1="75" y1="75" 
                      x2="<%= 75 + 50 * Math.cos(minute_angle * Math::PI / 180) %>" 
                      y2="<%= 75 + 50 * Math.sin(minute_angle * Math::PI / 180) %>"
                      stroke="<%= result[:is_pm] ? '#004400' : '#003333' %>" 
                      stroke-width="5"
                      stroke-linecap="round" />
                
                <circle cx="75" cy="75" r="5" fill="#88ff00" filter="url(#glow)" />
                
                <text x="75" y="20" text-anchor="middle" 
                      fill="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      font-size="12" font-weight="bold" font-family="Orbitron">XII</text>
                <text x="130" y="78" text-anchor="middle" 
                      fill="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      font-size="12" font-weight="bold" font-family="Orbitron">III</text>
                <text x="75" y="135" text-anchor="middle" 
                      fill="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      font-size="12" font-weight="bold" font-family="Orbitron">VI</text>
                <text x="20" y="78" text-anchor="middle" 
                      fill="<%= result[:is_pm] ? '#66ff00' : '#00ff66' %>" 
                      font-size="12" font-weight="bold" font-family="Orbitron">IX</text>
              </svg>
            </div>
            
            <div class="city-name"><%= result[:city] %></div>
            <div class="time-digital">
              <%= result[:time].strftime("%l:%M %p").strip %>
            </div>
            <div class="timezone-info">
              <%= result[:offset] %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</body>
</html>